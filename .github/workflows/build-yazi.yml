name: Build and Release Yazi RPM

on:
   schedule:
      - cron: "0 0 * * *" # Runs daily at midnight
   workflow_dispatch: # Allows manual trigger

permissions:
   contents: write # Add explicit permissions for creating releases

jobs:
   check-version:
      runs-on: ubuntu-latest
      outputs:
         should_build: ${{ steps.check.outputs.should_build }}
         version: ${{ steps.check.outputs.version }}
      steps:
         - id: check
           run: |
              LATEST=$(curl -s https://crates.io/api/v1/crates/yazi-fm | jq -r '.crate.max_version')
              CURRENT=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' || echo "0.0.0")
              if [[ "$LATEST" != "$CURRENT" ]]; then
                echo "should_build=true" >> $GITHUB_OUTPUT
                echo "version=$LATEST" >> $GITHUB_OUTPUT
              else
                echo "should_build=false" >> $GITHUB_OUTPUT
              fi

   build:
      needs: check-version
      if: needs.check-version.outputs.should_build == 'true'
      runs-on: ubuntu-latest
      container: fedora:latest

      steps:
         - name: Install dependencies
           run: |
              dnf update -y
              dnf install -y curl gcc make openssl-devel pkg-config rpm-build rpmdevtools findutils

         - name: Install Rust
           run: |
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
              source "$HOME/.cargo/env"
              rustup update

         - name: Setup RPM environment
           run: |
              rpmdev-setuptree

         - name: Create spec file
           run: |
              cat > /root/rpmbuild/SPECS/yazi.spec << 'EOF'
              Name:           yazi
              Version:        ${{ needs.check-version.outputs.version }}
              Release:        1%{?dist}
              Summary:        A terminal file manager written in Rust

              License:        MIT
              URL:            https://github.com/yazi-rs/yazi

              BuildRequires:  gcc
              BuildRequires:  make
              BuildRequires:  openssl-devel
              BuildRequires:  pkg-config

              %description
              Yazi is a terminal file manager written in Rust, based on async I/O.

              %prep
              # No source preparation needed as we're building directly from cargo

              %build
              source "$HOME/.cargo/env"
              cargo install --locked yazi-fm yazi-cli

              %install
              mkdir -p %{buildroot}%{_bindir}
              cp ~/.cargo/bin/yazi* %{buildroot}%{_bindir}/

              %files
              %{_bindir}/yazi*

              %changelog
              * $(date '+%a %b %d %Y') Builder <builder@fedoraproject.org> - ${{ needs.check-version.outputs.version }}-1
              - Automated build of version ${{ needs.check-version.outputs.version }}
              EOF

         - name: Build RPM
           run: |
              rpmbuild -ba /root/rpmbuild/SPECS/yazi.spec

         - name: Prepare artifact directory
           run: |
              mkdir -p /github/artifacts
              find /root/rpmbuild/RPMS/x86_64/ -name "yazi-${{ needs.check-version.outputs.version }}*.rpm" -exec cp {} /github/artifacts/ \;

         - name: Upload RPM
           uses: actions/upload-artifact@v4 # Updated to v4
           with:
              name: rpm-package
              path: /github/artifacts/
              retention-days: 5 # Optional: specify how long to keep the artifact

         - name: Create Release
           uses: softprops/action-gh-release@v1
           with:
              tag_name: ${{ needs.check-version.outputs.version }}
              name: Yazi ${{ needs.check-version.outputs.version }}
              files: /github/artifacts/*.rpm
              generate_release_notes: true
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
